name: Video Restoration (Preview + Full)

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Processing mode: preview, restore, or both"
        required: true
        default: "both"
        type: choice
        options:
          - preview
          - restore
          - both

jobs:
  run_pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg git

      - name: Install Python deps (best-effort)
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt || echo "⚠️ pip install had issues, continuing"

      - name: Optional clone heavy-models (best-effort)
        run: |
          if [ ! -d "Real-ESRGAN" ]; then
            git clone --depth 1 https://github.com/xinntao/Real-ESRGAN.git Real-ESRGAN || echo "⚠️ Real-ESRGAN clone failed"
          fi
          if [ ! -d "ECCV2022-RIFE" ] && [ ! -d "RIFE" ]; then
            git clone --depth 1 https://github.com/megvii-research/ECCV2022-RIFE.git ECCV2022-RIFE || echo "⚠️ RIFE clone failed"
          fi

      - name: Prepare input/output (use repo asset)
        run: |
          mkdir -p input output
          if [ -f "assets/sample.mp4" ]; then
            cp assets/sample.mp4 input/sample.mp4
          else
            echo "❌ assets/sample.mp4 not found in repo" && exit 1
          fi
          ffprobe -v error -show_format -show_streams input/sample.mp4 || (echo "❌ ffprobe failed — input invalid" && exit 1)

      - name: Run preview + full according to mode
        run: |
          MODE="${{ github.event.inputs.mode }}"
          echo "Mode = $MODE"
          if [ "$MODE" = "preview" ] || [ "$MODE" = "both" ]; then
            python3 process_video.py --input input/sample.mp4 --preview output/preview.mp4 --keep-temp || echo "⚠️ preview step returned non-zero"
          fi
          if [ "$MODE" = "restore" ] || [ "$MODE" = "both" ]; then
            # default: do stabilization, denoise, color, upscale and interpolate (best-effort)
            python3 process_video.py --input input/sample.mp4 --restore output/full_restored.mp4 --stabilize --denoise --color --upscale --interpolate --keep-temp || echo "⚠️ restore step returned non-zero"
          fi

      - name: Verify outputs
        run: |
          if [ -f "output/preview.mp4" ] && [ -f "output/full_restored.mp4" ]; then
            echo "✅ Videos are ready for upload!"
          else
            echo "❌ Videos were not processed correctly!"
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: restoration-output
          path: output/
